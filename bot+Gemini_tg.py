import telebot
import scrapetube
import schedule
import time
from langdetect import detect
import google.generativeai as genai
from pytube import YouTube
from flask import Flask
from threading import Thread

app = Flask('')

@app.route('/')
def home():
    return "I'm alive"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

# –ë–æ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Å—ã (TOKEN-–¥—ñ ”©–∑—ñ“£—ñ–∑–¥—ñ–∫—ñ—Å—ñ–Ω “õ–æ—é –∫–µ—Ä–µ–∫)
BOT_TOKEN = '8178504281:AAEP3XgJih0wTccf8bqme-GOhSEPXvE9hbY'
CHANNEL_USERNAME = '@BM_Films07'
COMMENT_CHAT_ID = -1001627971823
GEMINI_API_KEY = 'AIzaSyBUJhu-xpB-Dewo01oiZfPYv1RKyM8_TQ4'

bot = telebot.TeleBot(BOT_TOKEN, parse_mode=None)  # TeleBot –æ–±—ä–µ–∫—Ç—ñ—Å—ñ–Ω “õ“±—Ä—ÉÓ®Å13Ó®Ç
genai.configure(api_key=GEMINI_API_KEY)  # Google Gemini API –∫—ñ–ª—Ç—ñ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–ª–∞—ÉÓ®Å14Ó®Ç

# YouTube-–¥–∞–Ω —Å–æ“£“ì—ã –≤–∏–¥–µ–æ–Ω—ã –±–∞“õ—ã–ª–∞—É –∞–π–Ω—ã–º–∞–ª—ã—Å—ã
last_video_id = None

def check_youtube_new_video():
    global last_video_id
    channel_id = "UCxlWZOOwrSrtlvPiDlmmw8A"
    # –ê—Ä–Ω–∞–¥–∞“ì—ã –∂–∞“£–∞ –≤–∏–¥–µ–æ–Ω—ã –∞–ª—É (–µ“£ —Å–æ“£“ì—ã –∂–∞“£–∞—Ä—ã–ª“ì–∞–Ω)Ó®Å15Ó®Ç
    videos = scrapetube.get_channel(channel_id, sort_by="newest")
    try:
        latest_video = next(videos)
    except StopIteration:
        return
    vid_id = latest_video.get('videoId')
    if vid_id and vid_id != last_video_id:
        # –ñ–∞“£–∞ –≤–∏–¥–µ–æ —Ç–∞–±—ã–ª–¥—ã
        last_video_id = vid_id
        url = f"https://www.youtube.com/watch?v={vid_id}"
        # –í–∏–¥–µ–æ —Ç–∞“õ—ã—Ä—ã–±—ã–Ω –∞–ª—É “Ø—à—ñ–Ω pytube –ø–∞–π–¥–∞–ª–∞–Ω—É
        try:
            yt = YouTube(url)
            title = yt.title
        except Exception:
            title = "–ñ–∞“£–∞ –≤–∏–¥–µ–æ"
        text = f"üé¨ –ñ–∞“£–∞ –≤–∏–¥–µ–æ —à—ã“õ—Ç—ã: *{title}*\n{url}"
        bot.send_message(CHANNEL_USERNAME, text)  # –ê—Ä–Ω–∞“ì–∞ —Ö–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—ÉÓ®Å16Ó®Ç

# ”ò—Ä 2 —Å–∞“ì–∞—Ç —Å–∞–π—ã–Ω –∫”©“£—ñ–ª–¥—ñ –∫–∏–Ω–æ —Ç–∞“õ—ã—Ä—ã–±—ã–Ω–¥–∞“ì—ã –º”ô—Ç—ñ–Ω –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–ª–∞—É
def scheduled_post():
    prompt = "–ö–∏–Ω–æ“ì–∞ “õ–∞—Ç—ã—Å—Ç—ã –∫”©“£—ñ–ª–¥—ñ ”ô—Ä—ñ “õ—ã–∑—ã“õ—Ç—ã –º”ô—Ç—ñ–Ω –∂–∞–∑—ã“£—ã–∑ (“õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω–¥–µ)."
    model = genai.GenerativeModel('gemini-1.5-flash')
    response = model.generate_content(prompt)  # Gemini-–≥–µ —Å“±—Ä–∞—É –∂—ñ–±–µ—Ä—ÉÓ®Å17Ó®Ç
    text = response.text.strip()
    bot.send_message(CHANNEL_USERNAME, text)  # –ù”ô—Ç–∏–∂–µ–Ω—ñ –∞—Ä–Ω–∞“ì–∞ –∂–∞—Ä–∏—è–ª–∞—É

# –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —á–∞—Ç—ã–Ω–¥–∞“ì—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞“ì–∞ –∂–∞—É–∞–ø –±–µ—Ä—É –∂”ô–Ω–µ “õ–∞—Ä–∞ —Ç—ñ–∑—ñ–º —Ç–µ–∫—Å–µ—Ä—É
warnings = {}  # “ö–æ–ª–¥–∞–Ω—É—à—ã“ì–∞ –µ—Å–∫–µ—Ä—Ç—É —Å–∞–Ω—ã —Å–∞“õ—Ç–∞–ª–∞—Ç—ã–Ω dict: {user_id: count}

@bot.message_handler(func=lambda m: m.chat.id == COMMENT_CHAT_ID, content_types=['text'])
def handle_comment_message(message):
    user_id = message.from_user.id
    text = message.text.lower()
    # –ë–æ“õ—Ç—ã“õ —Å”©–∑–¥–µ—Ä–¥—ñ —Ç–µ–∫—Å–µ—Ä—É (“õ–∞—Ä–∞–ø–∞–π—ã–º –º—ã—Å–∞–ª —Å”©–∑–¥–µ—Ä)
    kazakh_profanity = ["“õ–æ—Ç–∞“õ", "–∞–º", "“õ–∞–Ω—à—ã“õ", "—à–µ—à–µ“£", "—Å–æ—Ä–∞", "–¥–∞–ª–±–∞—ë–±"]
    russian_profanity = ["—Å—É–∫–∞", "–±–ª—è–¥—å", "—Ö—É–π", "–ø–∏–∑–¥–∞", "–≥–∞–Ω–¥–æ–Ω"]  # “ö–∞–∂–µ—Ç –±–æ–ª—Å–∞ –Ω–∞“õ—Ç—ã —Å”©–∑–¥–µ—Ä–¥—ñ “õ–æ—Å—ã“£—ã–∑
     # –ú—ã—Å–∞–ª“ì–∞ –∞“ì—ã–ª—à—ã–Ω —Å”©–∑–¥–µ—Ä—ñ, –Ω–∞“õ—Ç—ã –æ—Ä—ã—Å—à–∞ —Å”©–∑–¥–µ—Ä–º–µ–Ω –∞—É—ã—Å—Ç—ã—Ä—ã“£—ã–∑
    # “ö–∞–∑–∞“õ—à–∞ –∞–Ω—ã“õ—Ç–∞—É: –º”ô—Ç—ñ–Ω–¥–µ “õ–∞–∑–∞“õ ”ô—Ä—ñ–ø—Ç–µ—Ä—ñ –±–∞—Ä –º–∞?
    language = 'ru'
    if detect(text) == 'ru':
        language = 'ru'
    elif any(ch in text for ch in "”ô“ì“õ“£”©“Ø—ñ"):
        language = 'kk'
    # –ë–æ“õ—Ç—ã“õ —Å”©–∑–¥–µ—Ä–¥—ñ “õ–∞—Ä–∞—Å—Ç—ã—Ä—É
    if any(word in text for word in kazakh_profanity):
        warnings[user_id] = warnings.get(user_id, 0) + 1
        if warnings[user_id] >= 3:
            bot.kick_chat_member(COMMENT_CHAT_ID, user_id)  # 3 –µ—Å–∫–µ—Ä—Ç—É: —á–∞—Ç—Ç–∞–Ω —à—ã“ì–∞—Ä—É
            return
        else:
            bot.reply_to(message, f"–ï—Å–∫–µ—Ä—Ç—É: “±—è—Ç —Å”©–∑ “õ–æ–ª–¥–∞–Ω–±–∞“£—ã–∑! ({warnings[user_id]}/3)")

    # Gemini –∞—Ä“õ—ã–ª—ã –∂–∞—É–∞–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–ª–∞—É
    reply_prompt = ""
    if language == 'ru':
        reply_prompt = f"–ú—ã—Å–∞–ª—ã, –∂–∞—É–∞–ø —Ä–µ—Ç—ñ–Ω–¥–µ ”ô–∑—ñ–ª–¥–µ–π—Ç—ñ–Ω –∂”ô–Ω–µ —Ç“Ø—Å—ñ–Ω—ñ–∫—Ç—ñ —Ç“Ø—Ä–¥–µ –æ—Ä—ã—Å —Ç—ñ–ª—ñ–Ω–¥–µ –∂–∞—É–∞–ø –±–µ—Ä: {text}"
    else:
        reply_prompt = f"–ö—ñ–Ω”ô–º–º–µ–Ω “ö–∞–∑–∞“õ—Å—Ç–∞–Ω –∫–∏–Ω–æ—Å—ã —Ç—É—Ä–∞–ª—ã “õ—ã–∑—ã“õ—Ç—ã –∂–∞—É–∞–ø –±–µ—Ä: {text}"
    try:
        model = genai.GenerativeModel('gemini-1.5-flash')
        response = model.generate_content(reply_prompt)
        reply = response.text.strip()
        bot.reply_to(message, reply)
    except Exception as e:
        bot.reply_to(message, "–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, “õ–∞—Ç–µ –±–æ–ª–¥—ã, –∫–µ–π—ñ–Ω—ñ—Ä–µ–∫ “õ–∞–π—Ç–∞ —Å“±—Ä–∞“£—ã–∑.")

# –ê–ª“ì–∞—à“õ—ã —Ç–µ–∫—Å–µ—Ä—ñ—Å—Ç—ñ –±—ñ—Ä —Ä–µ—Ç –∂–∞—Å–∞—É
check_youtube_new_video()

# –ö–µ—Å—Ç–µ–≥–µ —Å–∞–ª—ã–ø –∂“±–º—ã—Å —ñ—Å—Ç–µ—É: ”ô—Ä –µ–∫—ñ —Å–∞“ì–∞—Ç —Å–∞–π—ã–Ω —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä–¥—ã —à–∞“õ—ã—Ä—ÉÓ®Å18Ó®Ç
schedule.every(2).hours.do(check_youtube_new_video)
schedule.every(2).hours.do(scheduled_post)

def run_schedule():
    while True:
        schedule.run_pending()
        time.sleep(60)

# –§–æ–Ω–¥—ã“õ –∫–µ—Å—Ç–µ–Ω—ñ —ñ—Å–∫–µ “õ–æ—Å—É (–∫–µ–π–±—ñ—Ä—ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–µ—Ä–≤–∏—Å—Ç–µ—Ä–¥–µ “Ø—à—ñ–Ω—à—ñ —Ç–∞—Ä–∞–ø ”ô–¥—ñ—Å—Ç–µ—Ä—ñ “õ–∞–∂–µ—Ç)
import threading
threading.Thread(target=run_schedule, daemon=True).start()

# –ë–æ—Ç—Ç—ã —ñ—Å–∫–µ “õ–æ—Å—É (–∂“±–º—ã—Å—ã–Ω “Ø–∑–¥—ñ–∫—Å—ñ–∑ –∂–∞—Å–∞—É “Ø—à—ñ–Ω)
# –ë–æ—Ç—Ç—ã —ñ—Å–∫–µ “õ–æ—Å—É
keep_alive()  # –ë“±–ª ”©—Ç–µ –º–∞“£—ã–∑–¥—ã! Render Flask –ø–æ—Ä—Ç—ã–Ω–∞ “õ–∞—Ä–∞–ø —Ç“±—Ä–∞–¥—ã!
bot.infinity_polling()
